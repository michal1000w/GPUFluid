<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="APP_INFO.h" />
    <ClInclude Include="BPPointCloud.h" />
    <ClInclude Include="Common.h" />
    <ClInclude Include="cutil_math.h" />
    <ClInclude Include="double_buffer.h" />
    <ClInclude Include="Fluid_Kernels.cuh" />
    <ClInclude Include="Fluid_Kernels_Fast.cuh" />
    <ClInclude Include="Fluid_Kernels_Faster.cuh" />
    <ClInclude Include="Fluid_State.cuh" />
    <ClInclude Include="GetFileList.h" />
    <ClInclude Include="GRID3D.h" />
    <ClInclude Include="ImCurveEdit.h" />
    <ClInclude Include="IO.h" />
    <ClInclude Include="Libraries.h" />
    <ClInclude Include="LoadTexture.h" />
    <ClInclude Include="Object.h" />
    <ClInclude Include="ObjIO.h" />
    <ClInclude Include="openvdb-old\blosc.h" />
    <ClInclude Include="openvdb-old\miniz.h" />
    <ClInclude Include="openvdb-old\tinyvdbio.h" />
    <ClInclude Include="printUtils.h" />
    <ClInclude Include="Renderer.h" />
    <ClInclude Include="Shader.h" />
    <ClInclude Include="Solver.cuh" />
    <ClInclude Include="Texture.h" />
    <ClInclude Include="IndexBuffer.h" />
    <ClInclude Include="third_party\c-blosc\blosc\blosc-export.h" />
    <CudaCompile Include="third_party\cuda_voxelizer\src\voxelize.cu" />
    <CudaCompile Include="third_party\cuda_voxelizer\src\voxelize.cuh" />
    <ClInclude Include="third_party\imgui\backends\imgui_impl_glfw.h" />
    <ClInclude Include="third_party\imgui\backends\imgui_impl_opengl3.h" />
    <ClInclude Include="third_party\imgui\imconfig.h" />
    <ClInclude Include="third_party\imgui\imgui.h" />
    <ClInclude Include="third_party\imgui\imgui_internal.h" />
    <ClInclude Include="third_party\imgui\imstb_rectpack.h" />
    <ClInclude Include="third_party\imgui\imstb_textedit.h" />
    <ClInclude Include="third_party\imgui\imstb_truetype.h" />
    <ClInclude Include="third_party\toml++\toml.hpp" />
    <ClInclude Include="Timeline.h" />
    <ClInclude Include="VertexArray.h" />
    <ClInclude Include="VertexBuffer.h" />
    <ClInclude Include="VertexBufferLayout.h" />
    <ClInclude Include="Voxelizer.h" />
    <ClInclude Include="Window.h" />
    <CudaCompile Include="openvdb\common.h" />
    <CudaCompile Include="openvdb\ComputePrimitives.h" />
    <ClInclude Include="Renderer.cuh" />
    <ClInclude Include="Simulation.cuh" />
    <ClInclude Include="third_party\openvdb\nanovdb\nanovdb\CNanoVDB.h" />
    <ClInclude Include="third_party\openvdb\nanovdb\nanovdb\NanoVDB.h" />
    <ClInclude Include="Unified_Buffer.h" />
    <CudaCompile Include="third_party\cuda_voxelizer\src\voxelize_solid.cu" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="double_buffer.cpp" />
    <ClCompile Include="ImCurveEdit.cpp" />
    <ClCompile Include="IndexBuffer.cpp" />
    <ClCompile Include="Object.cpp" />
    <ClCompile Include="openvdb-old\miniz.c" />
    <ClCompile Include="openvdb-old\tinyvdbio.cc" />
    <ClCompile Include="Renderer.cpp" />
    <ClCompile Include="Shader.cpp" />
    <ClCompile Include="Texture.cpp" />
    <ClCompile Include="third_party\imgui\backends\imgui_impl_glfw.cpp" />
    <ClCompile Include="third_party\imgui\backends\imgui_impl_opengl3.cpp" />
    <ClCompile Include="third_party\imgui\imgui.cpp" />
    <ClCompile Include="third_party\imgui\imgui_demo.cpp" />
    <ClCompile Include="third_party\imgui\imgui_draw.cpp" />
    <ClCompile Include="third_party\imgui\imgui_tables.cpp" />
    <ClCompile Include="third_party\imgui\imgui_widgets.cpp" />
    <ClCompile Include="Timeline.cpp" />
    <ClCompile Include="Unified_Buffer.cpp" />
    <ClCompile Include="VertexArray.cpp" />
    <ClCompile Include="VertexBuffer.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="main.cu" />
    <CudaCompile Include="HugeScaleSolver.cu" />
    <CudaCompile Include="openvdb\read_nanovdb_sphere_accessor_cuda.cu" />
  </ItemGroup>
  <ItemGroup>
    <None Include="third_party\dlls\window.toml" />
    <None Include="third_party\openvdb_headers\bin\blosc.dll">
      <FileType>Document</FileType>
    </None>
    <None Include="third_party\openvdb_headers\bin\boost_system-vc140-mt-1_63.dll" />
    <None Include="third_party\openvdb_headers\bin\Half.dll" />
    <None Include="third_party\openvdb_headers\bin\openvdb.dll" />
    <None Include="third_party\openvdb_headers\bin\tbb.dll" />
    <None Include="third_party\openvdb_headers\bin\zlib.dll" />
    <None Include="x64\Release\Shaders.shader" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4AC2887C-CF72-405D-A7DF-FDEDD7398F6B}</ProjectGuid>
    <RootNamespace>JFlow</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.2.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(SolutionDir)$(Platform)\$(Configuration)\</IntDir>
    <TargetName>JFlowAlpha</TargetName>
    <LibraryPath>third_party\openvdb_headers\bin;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LibraryPath>third_party\openvdb_headers\bin;$(LibraryPath)</LibraryPath>
    <TargetName>JFlowAlpha</TargetName>
    <IntDir>$(SolutionDir)$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>third_party/toml++;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <VcpkgUseStatic>false</VcpkgUseStatic>
    <VcpkgEnabled>false</VcpkgEnabled>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <VcpkgEnabled>false</VcpkgEnabled>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;WIN64;NDEBUG;_CONSOLE;NANOVDB_USE_BLOSC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>third_party/GLFW/include;third_party/openvdb_headers/include;third_party/openvdb/nanovdb;third_party/all/include;third_party;third_party/usd/include;third_party/imgui;third_party/glm;third_party/trimesh2/build/include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <WholeProgramOptimization>false</WholeProgramOptimization>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;cudart.lib;openvdb.lib;libopenvdb.lib;blosc.lib;Half-2_5.lib;zlib.lib;tbb.lib;lz4.lib;boost_system-vc140-mt.lib;boost_iostreams-vc140-mt.lib;glfw3.lib;opengl32.lib;glu32.lib;glew32.lib;trimesh.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>third_party\trimesh2\lib.Win64.vs142;third_party\GLFW\lib;third_party\all\lib;third_party\openvdb_headers\lib;third_party\GLEW\x64;third_party\GL;third_party\freeglut\lib;third_party\usd\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Defines>_USE_MATH_DEFINES</Defines>
      <CodeGeneration>compute_50,sm_50;%(CodeGeneration)</CodeGeneration>
      <FastMath>true</FastMath>
      <AdditionalOptions>--extended-lambda %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
    <CudaLink>
      <AdditionalLibraryDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </CudaLink>
    <PostBuildEvent>
      <Command>xcopy /y /d "third_party\openvdb_headers\bin\*.dll" "$(OutDir)"
xcopy /y /d "third_party\dlls\*" "$(OutDir)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;WIN64;NDEBUG;_CONSOLE;NANOVDB_USE_BLOSC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>third_party/GLFW/include;third_party/openvdb_headers/include;third_party/openvdb/nanovdb;third_party/all/include;third_party;third_party/usd/include;third_party/imgui;third_party/glm;third_party/trimesh2/build/include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <FloatingPointModel>Fast</FloatingPointModel>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <WholeProgramOptimization>false</WholeProgramOptimization>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;cudart.lib;openvdb.lib;libopenvdb.lib;blosc.lib;Half-2_5.lib;zlib.lib;tbb.lib;lz4.lib;boost_system-vc140-mt.lib;boost_iostreams-vc140-mt.lib;glfw3.lib;opengl32.lib;glu32.lib;glew32.lib;trimesh.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>third_party\trimesh2\lib.Win64.vs142;third_party\GLFW\lib;third_party\all\lib;third_party\openvdb_headers\lib;third_party\GLEW\x64;third_party\GL;third_party\freeglut\lib;third_party\usd\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <FastMath>true</FastMath>
      <Optimization>InheritFromHost</Optimization>
      <Runtime>InheritFromHost</Runtime>
      <AdditionalCompilerOptions>
      </AdditionalCompilerOptions>
      <Defines>_USE_MATH_DEFINES</Defines>
      <AdditionalOptions>--extended-lambda %(AdditionalOptions)</AdditionalOptions>
      <InterleaveSourceInPTX>false</InterleaveSourceInPTX>
      <CodeGeneration>compute_50,sm_50;%(CodeGeneration)</CodeGeneration>
    </CudaCompile>
    <CudaLink>
      <AdditionalLibraryDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </CudaLink>
    <PostBuildEvent>
      <Command>xcopy /y /d "third_party\openvdb_headers\bin\*.dll" "$(OutDir)"
xcopy /y /d "third_party\dlls\*" "$(OutDir)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.2.targets" />
  </ImportGroup>
</Project>